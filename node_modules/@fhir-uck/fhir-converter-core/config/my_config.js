const { text } = require('express');
const uuid = require('uuid');
const organizationId = uuid.v4();

module.exports.config = {
    name: 'my_config',
    version: '1.0.0',
    fhirServerBaseUrl: 'https://twcore.hapi.fhir.tw/',
    action: 'return',
    fhir_version: 'R4',  // FHIR 版本，可以是 'R4', 'R4B', 或 'R5'
    validate: false // 設定是否啟用驗證
}

module.exports.globalResource = {
    ObservationVS: {
        resourceType: 'Observation',
        meta: {
            profile: [
                'https://twcore.mohw.gov.tw/ig/twcore/StructureDefinition/Observation-vitalSigns-twcore'
            ]
        },
        status: 'final',
        category: [
            {
                coding: [
                    {
                        system: 'http://terminology.hl7.org/CodeSystem/observation-category',
                        code: 'vital-signs',
                        display: 'Vital Signs'
                    }
                ]
            }
        ],
        code: {
            coding: [
                {
                    system: 'http://loinc.org',
                    code: '85353-1',
                    display: 'Vital signs, weight, height, head circumference, oxygen saturation and BMI panel'
                }
            ],
            text: 'Vital Signs Panel'
        },
        subject: {
            reference: '#Patient'
        },
        component: [
            {
                code: {
                    coding: [
                        {
                            system: 'http://loinc.org',
                            code: '8302-2',
                            display: 'Body height'
                        },
                    ],
                    text: 'Body Height'
                },
                valueQuantity: {
                    unit: 'cm',
                    "system": "http://unitsofmeasure.org",
                    code: "cm"
                }
            },
            {
                code: {
                    coding: [
                        {
                            system: 'http://loinc.org',
                            code: '29463-7',
                            display: 'Body weight'
                        }
                    ],
                    text: 'Body Height'
                },
                valueQuantity: {
                    unit: 'kg',
                    "system": "http://unitsofmeasure.org",
                    code: "kg"
                }
            },
            {
                code: {
                    coding: [
                        {
                            system: 'http://loinc.org',
                            code: '39156-5',
                            display: 'Body mass index (BMI)'
                        }
                    ]
                },
                valueQuantity: {
                    unit: 'kg/m2',
                    system: "http://unitsofmeasure.org",
                    code: "kg/m2"
                }
            }
        ]
    },
    Patient: {
        resourceType: 'Patient',
        meta: {
            profile: [
                'https://twcore.mohw.gov.tw/ig/twcore/StructureDefinition/Patient-twcore'
            ]
        },
        identifier: [
            {
                system: 'http://hospital.local/patient-id',
                value: '#Patient.identifier[0].value'
            }
        ],
        name: [
            {
                use: 'official',
                family: '#Patient.name[0].family',
                given: ['#Patient.name[0].given[0]']
            }
        ],
        gender: '#Patient.gender',
        birthDate: '#Patient.birthDate',
    }
}

module.exports.fields = [
    {
        source: 'patientData.patientId',
        target: 'Patient.id',
        beforeConvert: (data) => {
            return `patient-${data}`;
        }
    },
    {
        source: 'fullName',
        target: 'Patient.name',
        beforeConvert: (data) => {
            return {
                use: 'official',
                text: data,
                family: data.split(' ')[0],
                given: [data.split(' ')[1]]
            }
        }
    },
    {
        source: 'birthDate',
        target: 'Patient.birthDate',
    },
    {
        source: 'gender',
        target: 'Patient.gender',
    },
    {
        source: 'bloodType',
        target: 'ObservationBloodType.valueString',
    },
    {
        source: 'abp_systolic',
        target: 'ObservationABP.component[0].valueQuantity.value'
    },
    {
        source: 'abp_diastolic',
        target: 'ObservationABP.component[1].valueQuantity.value'
    },
    {
        source: 'abp_number',
        target: 'ObservationABP.component[2].valueQuantity.value'
    },
    {
        source: 'requester',
        target: 'PractitionerRequester.identifier[0].value'
    },
    {
        source: 'performer',
        target: 'PractitionerPerformer.identifier[0].value'
    },
    {
        source: 'orderId',
        target: 'ServiceRequest.identifier[0].value'
    },
]

// Global data pre-processor
module.exports.beforeProcess = (data) => {
    // Combine names
    data.fullName = `${data.lastName} ${data.firstName}`;
    
    // Add timestamp
    data.timestamp = new Date().toISOString();
    
    // Delete original lastName and firstName fields
    delete data.lastName;
    delete data.firstName;
    
    return data;
}

// Add a global post-processor to add Organization resource
module.exports.afterProcess = (bundle) => {
    // Check if Organization resource already exists
    const organizationEntry = bundle.entry.find(entry => entry.resource.resourceType === 'Organization');
    
    if (!organizationEntry) {
        // If not, add Organization resource
        bundle.entry.unshift({
            fullUrl: `${module.exports.config.fhirServerBaseUrl}/Organization/${organizationId}`,
            resource: { id: organizationId, ...module.exports.globalResource.Organization },
            request: {
                method: 'PUT',
                url: `Organization/${organizationId}`
            }
        });
    }
    
    return bundle;
}
